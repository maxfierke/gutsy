# <%= app_name %> Ruby Client

<% if description -%>
<%= description -%>
<% else -%>
<%= app_name %> is an application that does things. This gem provides a wrapper around an HTTP Client generated from <%= app_name %>'s JSON Schema using [heroics](https://github.com/interagent/heroics).
<% end -%>

## Usage

Add this to your Gemfile

```
gem '<%= gem_name_snake %>', git: 'git@github.com:<%= author.github %>/<%= repo_name %>.git', tag: 'v<%= gem_version %>'
# or, depending on how cool your API is...
gem '<%= gem_name_snake %>', '~> <%= gem_version %>'
```

### Rails Setup

* Add to an initializer (e.g. `config/initializers/<%= gem_name_snake %>.rb`)

  ```ruby
  <%= gem_name_pascal %>.configure do |config|
    config.base_url   = "<%= base_url %>"
    config.api_key    = "i-am-api-user"
    config.api_secret = "very-secret-sssshhh"
    # or OAuth access token
    # config.access_token = ENV['<%= gem_name_snake.upcase %>_ACCESS_TOKEN']
  end
  ```

### Example

```
class SomeResourceLister
  attr_accessor :client

  def initialize(access_token)
    @client = <%= gem_name_pascal %>::V1::SomeResource.new(access_token: access_token)
  end

  def call
    response = client.list({ "start_time" => Time.now.iso8601, "end_time" => (Time.now + 7.days).iso8601 })

    if response.ok?
      response.some_resources
    else
      response.errors
    end
  end
end
```

# API

All Client and Resource API methods return an Object mirroring the JSON response of the <%= app_name.capitalize %> API call, with the added method `ok?`, indicating whether the call was a success (`2xx`), or whether the call was invalid (`422`). Other failures will raise an `Excon::Errors::Error` such as an `Excon::Errors::HTTPStatusError`.

The methods supported by each Resource API are generated by heroics and are determined by the JSON schema. In most cases, the Resource APIs found in `lib/<%= gem_name_snake %>` just proxy method calls to the API adapter (by default the heroics-generated API adapter).

<% api_versions.each do |api_version| %>

## <%= app_name %> API <%= api_version.name %>

<% api_version.resources.each do |key, resource| -%>

### <%= resource.title.camelize %>

#### `::new(client=nil, access_token: nil, api_key: nil, api_secret: nil, options: {})`

Called with no arguments, `client` defaults to a newly created heroics client instance using the authentication details specified in an initializer/with `<%= gem_name_pascal %>.configure`. Passing an optional argument will override the authentication specified in `<%= gem_name_pascal %>.configuration` for the instance.

#### Methods

<% resource.links.each do |key, link| -%>
<% if key == :list || key == :create -%>
##### `#<%= key %>(body)`

* `body` - Hash containing the following properties:
  <% link.properties.each do |key, prop| -%>
  * `<%= key %>` - <%= prop.description %>
  <% end -%>
<% end -%>
<% if key == :info || key == :destroy -%>
##### `#<%= key %>(id)`

* `id` - <%= resource.title.titleize %> identifier

<% end -%>
<% if key == :update -%>
##### `#<%= key %>(id, body)`

* `id` - <%= resource.title.titleize %> identifier
* `body` - Hash containing the following properties:
  <% link.properties.each do |key, prop| -%>
  * `<%= key %>` - <%= prop.description %>
  <% end -%>
<% end -%>
<% end -%>
<% end -%>
<% end -%>
